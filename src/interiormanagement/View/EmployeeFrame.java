/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interiormanagement.View;

import interiormanagement.AppConfig;
import interiormanagement.Class.Employee;
import interiormanagement.ContentProvider;
import interiormanagement.Controller.ProcessDatabase;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.URL;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;

/**
 *
 * @author ASUS
 */
public class EmployeeFrame extends javax.swing.JFrame {
    public static final String TABLE_NAME = "NHANVIEN";
    public final Color GREEN_LIGHT = new Color(95, 212, 197);
    
    private final String[] titles = {"STT","Mã Nhân Viên","Tên Nhân Viên","Ngày Vào Làm","Chức Vụ"};
    private ProcessDatabase process; 
    private byte[] imageAvatar;
    private String fileName = "";
    private ArrayList<Employee> listEmployee;
    private ResultSet result;
    private DefaultTableModel model;
    private ImageIcon iconDefault;
    private boolean addOrUpdate = false; // false : add , true : update

    /**
     * Creates new form EmployeeFrame
     */
    public EmployeeFrame(){
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Quản lý cửa hàng nội thất DreamHouse");
        
        // set icon jframe
        ContentProvider.Logo(this);
        
        process = ContentProvider.process;
        
        cbGender.addItem("Nữ");
        cbGender.addItem("Nam");
        
        cbAuthority.addItem("Quản lý");
        cbAuthority.addItem("Nhân Viên");
        
        model = (DefaultTableModel) employeeTable.getModel();
        model.setColumnIdentifiers(titles);
        
        listEmployee = new ArrayList<>();
        ShowDataTable();
        
        setLabelEnable(false,false);
        
        listLabel.setBackground(Color.WHITE);
        
        employeeTable.setDefaultEditor(Object.class, null); // don't edit Table's content
        employeeTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (employeeTable.getSelectedRow() > -1) {
                    setLabelEnable(true,true);
                }
            }
        });
    
        URL Url = this.getClass().getResource("/interiormanagement/Images/icon_user.jpg");
        try {
           Image image = ImageIO.read(Url);
             iconDefault = new ImageIcon(image);
        } catch (IOException ex) {
            Logger.getLogger(EmployeeFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        tfSearch.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                SearchData();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                SearchData();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
        });
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        leftPanel = new javax.swing.JPanel();
        listLabel = new javax.swing.JLabel();
        addLabel = new javax.swing.JLabel();
        updateLabel = new javax.swing.JLabel();
        deleteLabel = new javax.swing.JLabel();
        rightPanel = new javax.swing.JPanel();
        listEmployeePanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        employeeTable = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tfSearch = new javax.swing.JTextField();
        addEmployeePanel = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        tfIdEmployee = new javax.swing.JTextField();
        tfName = new javax.swing.JTextField();
        cbGender = new javax.swing.JComboBox<>();
        tfPhone = new javax.swing.JTextField();
        tfAddress = new javax.swing.JTextField();
        tfPass = new javax.swing.JPasswordField();
        cbAuthority = new javax.swing.JComboBox<>();
        tfSalary = new javax.swing.JTextField();
        btnChooseFile = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        lblImage = new javax.swing.JLabel();
        acceptButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setSize(new java.awt.Dimension(900, 581));

        jLabel1.setBackground(new java.awt.Color(0, 153, 153));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("NHÂN VIÊN");
        jLabel1.setOpaque(true);

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 873, Short.MAX_VALUE)
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        getContentPane().add(topPanel, java.awt.BorderLayout.PAGE_START);

        leftPanel.setBackground(new java.awt.Color(95, 212, 197));
        leftPanel.setPreferredSize(new java.awt.Dimension(200, 500));

        listLabel.setBackground(new java.awt.Color(95, 212, 197));
        listLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        listLabel.setForeground(new java.awt.Color(47, 55, 67));
        listLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        listLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interiormanagement/Images/list_icon.png"))); // NOI18N
        listLabel.setText("DANH SÁCH");
        listLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        listLabel.setOpaque(true);
        listLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listLabelMousePressed(evt);
            }
        });

        addLabel.setBackground(new java.awt.Color(95, 212, 197));
        addLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        addLabel.setForeground(new java.awt.Color(47, 55, 67));
        addLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        addLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interiormanagement/Images/add_icon.png"))); // NOI18N
        addLabel.setText("Thêm");
        addLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addLabel.setOpaque(true);
        addLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                addLabelMousePressed(evt);
            }
        });

        updateLabel.setBackground(new java.awt.Color(95, 212, 197));
        updateLabel.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        updateLabel.setForeground(new java.awt.Color(47, 55, 67));
        updateLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        updateLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interiormanagement/Images/edit_icon.png"))); // NOI18N
        updateLabel.setText("Cập nhật / Chi Tiết");
        updateLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateLabel.setOpaque(true);
        updateLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                updateLabelMousePressed(evt);
            }
        });

        deleteLabel.setBackground(new java.awt.Color(95, 212, 197));
        deleteLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        deleteLabel.setForeground(new java.awt.Color(47, 55, 67));
        deleteLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        deleteLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interiormanagement/Images/cancel_icon.png"))); // NOI18N
        deleteLabel.setText("Xóa");
        deleteLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteLabel.setOpaque(true);
        deleteLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                deleteLabelMousePressed(evt);
            }
        });

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(listLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(addLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(updateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(deleteLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(listLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(325, Short.MAX_VALUE))
        );

        getContentPane().add(leftPanel, java.awt.BorderLayout.LINE_START);

        rightPanel.setBackground(new java.awt.Color(255, 255, 255));
        rightPanel.setLayout(new java.awt.CardLayout());

        listEmployeePanel.setBackground(new java.awt.Color(255, 255, 255));
        listEmployeePanel.setLayout(new java.awt.BorderLayout());

        employeeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        employeeTable.setDragEnabled(true);
        jScrollPane2.setViewportView(employeeTable);

        listEmployeePanel.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setPreferredSize(new java.awt.Dimension(673, 50));

        jLabel2.setText("Tìm Kiếm");

        tfSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfSearchKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(299, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        listEmployeePanel.add(jPanel9, java.awt.BorderLayout.PAGE_START);

        rightPanel.add(listEmployeePanel, "card2");

        addEmployeePanel.setBackground(new java.awt.Color(255, 255, 255));
        addEmployeePanel.setLayout(new java.awt.BorderLayout());

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setPreferredSize(new java.awt.Dimension(666, 25));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 673, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        addEmployeePanel.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setLayout(new java.awt.GridLayout(9, 1, 0, 5));

        jLabel4.setText("Mã Nhân Viên");
        jPanel8.add(jLabel4);

        jLabel13.setText("Tên Nhân Viên");
        jPanel8.add(jLabel13);

        jLabel14.setText("Phái");
        jPanel8.add(jLabel14);

        jLabel15.setText("SĐT");
        jPanel8.add(jLabel15);

        jLabel16.setText("Địa Chỉ");
        jPanel8.add(jLabel16);

        jLabel17.setText("Mật Khẩu");
        jPanel8.add(jLabel17);

        jLabel18.setText("Quyền Hạn");
        jPanel8.add(jLabel18);

        jLabel19.setText("Lương");
        jPanel8.add(jLabel19);

        jLabel20.setText("Hình Ảnh");
        jPanel8.add(jLabel20);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setPreferredSize(new java.awt.Dimension(200, 0));
        jPanel5.setLayout(new java.awt.GridLayout(9, 1, 0, 5));

        tfIdEmployee.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfIdEmployeeKeyTyped(evt);
            }
        });
        jPanel5.add(tfIdEmployee);

        tfName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNameKeyTyped(evt);
            }
        });
        jPanel5.add(tfName);

        jPanel5.add(cbGender);

        tfPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfPhoneKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfPhoneKeyTyped(evt);
            }
        });
        jPanel5.add(tfPhone);

        tfAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfAddressKeyTyped(evt);
            }
        });
        jPanel5.add(tfAddress);

        tfPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfPassKeyTyped(evt);
            }
        });
        jPanel5.add(tfPass);

        jPanel5.add(cbAuthority);

        tfSalary.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfSalaryKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfSalaryKeyTyped(evt);
            }
        });
        jPanel5.add(tfSalary);

        btnChooseFile.setText("Chọn File");
        btnChooseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseFileActionPerformed(evt);
            }
        });
        jPanel5.add(btnChooseFile);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        lblImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interiormanagement/Images/icon_user.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblImage)
        );

        acceptButton.setText("Chấp Nhận");
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
                .addGap(50, 50, 50))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(acceptButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(acceptButton, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addContainerGap())
        );

        addEmployeePanel.add(jPanel7, java.awt.BorderLayout.CENTER);

        rightPanel.add(addEmployeePanel, "card3");

        getContentPane().add(rightPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listLabelMousePressed
        setSelectedLabel(true, false, false);
    }//GEN-LAST:event_listLabelMousePressed

    private void addLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addLabelMousePressed
        setPanelVisible(false, true);
        setSelectedLabel(false, true, false);
        tfIdEmployee.setText("");
        tfName.setText("");
        tfPhone.setText("");
        tfAddress.setText("");
        tfPass.setText("");
        tfSalary.setText("");
        lblImage.setIcon(iconDefault);
        tfIdEmployee.setEnabled(true);
        addOrUpdate = false;
    }//GEN-LAST:event_addLabelMousePressed

    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
        if (validateInfo()) {
            JOptionPane.showMessageDialog(rootPane,"Bạn chưa nhập đủ thông tin!");
        }else{
            if (!addOrUpdate) {
                AddEmployee();
            }else
                EditEmployee();
           
        }
    }//GEN-LAST:event_acceptButtonActionPerformed

    private void btnChooseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseFileActionPerformed
        fileName = "";
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
         fileName = f.getAbsolutePath();
         String path = fileName.substring(fileName.length()-3, fileName.length());
        if (f != null && path.equals("png") || path.equals("jpg")) {
            ImageIcon imageIcon = new ImageIcon(new ImageIcon(fileName).getImage().getScaledInstance(165, 165, Image.SCALE_SMOOTH));
            lblImage.setIcon(imageIcon);

            File image = new File(fileName);
            try {
                FileInputStream fis = new FileInputStream(image);
                ByteArrayOutputStream bos = new ByteArrayOutputStream();
                byte[] buf = new byte[1024];
                for(int readNum;(readNum=fis.read(buf)) != -1;){
                    bos.write(buf,0,readNum);
                }
                imageAvatar = bos.toByteArray();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(EmployeeFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(EmployeeFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else
            JOptionPane.showMessageDialog(rootPane, "Bạn chọn file không hợp lệ!");
    }//GEN-LAST:event_btnChooseFileActionPerformed

    private void updateLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateLabelMousePressed
        if (updateLabel.isEnabled()) {
            tfIdEmployee.setEnabled(false);
            setSelectedLabel(false, false, true);
            setPanelVisible(false, true);
            addOrUpdate = true;

            fileName = "image was existed";
            
            int index = employeeTable.getSelectedRow();

            imageAvatar = listEmployee.get(index).getImage();
            tfIdEmployee.setText(listEmployee.get(index).getIdEmployee());
            tfName.setText(listEmployee.get(index).getName());
            cbGender.setSelectedIndex(listEmployee.get(index).getGender());
            tfPhone.setText(listEmployee.get(index).getPhone());
            tfAddress.setText(listEmployee.get(index).getAddress());
            tfPass.setText(listEmployee.get(index).getPass());
            cbAuthority.setSelectedIndex(listEmployee.get(index).getAuthority());
            tfSalary.setText(listEmployee.get(index).getSalary()+"");
            if (listEmployee.get(index).getImage()!= null) {
                ImageIcon icon = new ImageIcon(new ImageIcon(listEmployee.get(index).getImage()).getImage().getScaledInstance(165, 165, Image.SCALE_SMOOTH));
                lblImage.setIcon(icon);
            }else
                lblImage.setIcon(iconDefault);
        }
       
    }//GEN-LAST:event_updateLabelMousePressed

    private void deleteLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteLabelMousePressed
        if (deleteLabel.isEnabled()) {
            int result = JOptionPane.showConfirmDialog(rootPane, "Bạn có chắc chắn muốn thêm không?","Thông báo",JOptionPane.YES_NO_OPTION);
            if (result == 0) {
                if (DeleteEmployee()) {
                    JOptionPane.showMessageDialog(rootPane,"Xóa thành công");
                    ShowDataTable();
                    process.CloseConnect();
                }else
                    JOptionPane.showMessageDialog(rootPane,"Xóa thất bại");

                
            }
        }
    }//GEN-LAST:event_deleteLabelMousePressed

    private void tfPhoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPhoneKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE) || c== KeyEvent.VK_DELETE || tfPhone.getText().length() > 11)
            evt.consume();
    }//GEN-LAST:event_tfPhoneKeyTyped

    private void tfSalaryKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSalaryKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE) || c== KeyEvent.VK_DELETE || tfSalary.getText().length() > 8)
            evt.consume();
    }//GEN-LAST:event_tfSalaryKeyTyped

    private void tfSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSearchKeyTyped
        char c = evt.getKeyChar();
        if(tfSearch.getText().length() > 98)
            evt.consume();
    }//GEN-LAST:event_tfSearchKeyTyped

    private void tfPhoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPhoneKeyPressed
        if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_V) {
            evt.consume();
        }
    }//GEN-LAST:event_tfPhoneKeyPressed

    private void tfSalaryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSalaryKeyPressed
        if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_V) {
            evt.consume();
        }
    }//GEN-LAST:event_tfSalaryKeyPressed

    private void tfIdEmployeeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfIdEmployeeKeyTyped
        if(tfIdEmployee.getText().length() > 48)
            evt.consume();
    }//GEN-LAST:event_tfIdEmployeeKeyTyped

    private void tfNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNameKeyTyped
        if(tfName.getText().length() > 50)
            evt.consume();
    }//GEN-LAST:event_tfNameKeyTyped

    private void tfAddressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfAddressKeyTyped
         if(tfAddress.getText().length() > 50)
            evt.consume();
    }//GEN-LAST:event_tfAddressKeyTyped

    private void tfPassKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPassKeyTyped
         if(tfPass.getText().length() > 50)
            evt.consume();
    }//GEN-LAST:event_tfPassKeyTyped
   
    private void AddEmployee(){
        Calendar cal = Calendar. getInstance();
        Date date = cal.getTime();
        Employee nhanvien = new Employee(tfIdEmployee.getText(),
            tfName.getText(),
            cbGender.getSelectedIndex(),
            tfPhone.getText(),
            tfAddress.getText(),
            imageAvatar,
            date,
            tfPass.getText(),
            Integer.parseInt(tfSalary.getText()),
            cbAuthority.getSelectedIndex()
       );
        if (InsertNhanVien(nhanvien)) {
            JOptionPane.showMessageDialog(rootPane,"Thêm thành công !");
            setPanelVisible(true,false);
            setSelectedLabel(true, false, false);
            ShowDataTable();
            process.CloseConnect();
        }else
            JOptionPane.showMessageDialog(rootPane,"Dữ liệu sai hoặc nhân viên đã tồn tại!");
    }
    
    private void EditEmployee(){
         Employee employee = new Employee(tfIdEmployee.getText(),
            tfName.getText(),
            cbGender.getSelectedIndex(),
            tfPhone.getText(),
            tfAddress.getText(),
            imageAvatar,
            listEmployee.get(employeeTable.getSelectedRow()).getDateWork(),
            tfPass.getText(),
            Integer.parseInt(tfSalary.getText()),
            cbAuthority.getSelectedIndex()
       );
          if (UpdateEmployee(employee)) {
            JOptionPane.showMessageDialog(rootPane,"Sửa thành công !");
            setPanelVisible(true, false);
            setSelectedLabel(true,false,false);
            setLabelEnable(false, false);
            ShowDataTable();
             process.CloseConnect();
           
        }else
            JOptionPane.showMessageDialog(rootPane,"Sửa thất bại!");
    }
    
    private boolean InsertNhanVien(Employee employee){
         if (process.Connect()) {
             return process.InsertNhanVien(employee);
        }
        return false;
    }
    
    private boolean DeleteEmployee(){
         if (process.Connect()) {
             return process.DeleteData(TABLE_NAME,"MANV",listEmployee.get(employeeTable.getSelectedRow()).getIdEmployee());
        }
        return false;
    }
    
    private boolean UpdateEmployee(Employee employee){
         if (process.Connect()) {
             return process.UpdateEmployee(employee);
        }
        return false;
    }
    
    private ResultSet getListEmployee(){
        if (process.Connect()) {
            return process.getListData(TABLE_NAME);
        }
        return null;
    }
    
    private void ShowDataTable(){
        model.setRowCount(0);
        listEmployee.clear();
    
        result = getListEmployee();
        try {
            while(result.next()){
                listEmployee.add(new Employee(result.getString("MANV"),
                        result.getString("TENNV"),
                        result.getInt("PHAI"),
                        result.getString("SDT"),
                        result.getString("DIACHINV"),
                        result.getBytes("HINH"),
                        result.getDate("NGAYVAOLAM"),
                        result.getString("MATKHAU"),
                        result.getInt("LUONG"),
                        result.getInt("QUYENHAN")));
            }
        } catch (SQLException ex) {
            Logger.getLogger(EmployeeFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
       AddRow(listEmployee);
       process.CloseConnect();
    }
    
    private boolean validateInfo(){
        if (tfIdEmployee.getText().equals("") || tfName.getText().equals("") ||
                tfPhone.getText().equals("")|| tfAddress.getText().equals("") || 
                tfPass.getText().equals("") || tfSalary.getText().equals("") || 
                fileName.equals("")) {
            return true;
        }
        return false;
    }
    
    private void setLabelEnable(boolean update,boolean delete){
        updateLabel.setEnabled(update);
        deleteLabel.setEnabled(delete);
    }
    
    private void setPanelVisible(boolean listPanel,boolean addPanel){
        listEmployeePanel.setVisible(listPanel);
        addEmployeePanel.setVisible(addPanel);
    }
    
    private void setSelectedLabel(boolean selectedListLabel,boolean selectedAddLabel,boolean selectedUpdateLabel){
        if (selectedListLabel) {
            listLabel.setBackground(Color.WHITE);
            addLabel.setBackground(GREEN_LIGHT);
            updateLabel.setBackground(GREEN_LIGHT);
            setPanelVisible(true, false);
            if (employeeTable.getSelectedRow() > -1) {
                setLabelEnable(true,true);
            }else
                setLabelEnable(false,false);
        }
        if (selectedAddLabel) {
            listLabel.setBackground(GREEN_LIGHT);
            addLabel.setBackground(Color.WHITE);
            updateLabel.setBackground(GREEN_LIGHT);
            setPanelVisible(false, true);
            setLabelEnable(false,false);

        }
        if (selectedUpdateLabel) {
            listLabel.setBackground(GREEN_LIGHT);
            addLabel.setBackground(GREEN_LIGHT);
            updateLabel.setBackground(Color.WHITE);
            setPanelVisible(false, true);
            setLabelEnable(true,false);
        }
        
    }
    
    private void SearchData(){
        ArrayList<Employee> searchList = new ArrayList<>();
        for(Employee employee : listEmployee){
            if (employee.getName().toLowerCase().contains(tfSearch.getText()) || employee.getIdEmployee().toLowerCase().contains(tfSearch.getText())) {
                searchList.add(employee);
            }
        }
        
        if(tfSearch.getText().equals("")){
            searchList = listEmployee;
        }
        
         model.setRowCount(0);
         AddRow(searchList);
    }
    
    private void AddRow(ArrayList<Employee> list){
     int stt = 1;
        for(Employee employee : list){
            String chucVu = "";
            if (employee.getAuthority()== 0) {
                chucVu = "Quản Lý";
            }else if (employee.getAuthority() == 1) {
                chucVu = "Nhân Viên";
            }else if (employee.getAuthority() == 9999) {
                chucVu = "Admin";
            }
            model.addRow(new Object[]{
                stt,
                employee.getIdEmployee(),
                employee.getName(),
                employee.getDateWork(),
                chucVu
            });
            stt++;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new EmployeeFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptButton;
    private javax.swing.JPanel addEmployeePanel;
    private javax.swing.JLabel addLabel;
    private javax.swing.JButton btnChooseFile;
    private javax.swing.JComboBox<String> cbAuthority;
    private javax.swing.JComboBox<String> cbGender;
    private javax.swing.JLabel deleteLabel;
    private javax.swing.JTable employeeTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblImage;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JPanel listEmployeePanel;
    private javax.swing.JLabel listLabel;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JTextField tfAddress;
    private javax.swing.JTextField tfIdEmployee;
    private javax.swing.JTextField tfName;
    private javax.swing.JPasswordField tfPass;
    private javax.swing.JTextField tfPhone;
    private javax.swing.JTextField tfSalary;
    private javax.swing.JTextField tfSearch;
    private javax.swing.JPanel topPanel;
    private javax.swing.JLabel updateLabel;
    // End of variables declaration//GEN-END:variables
}
