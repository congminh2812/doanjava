/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interiormanagement.View;

import interiormanagement.Class.Employee;
import interiormanagement.Class.Product;
import interiormanagement.Class.TypeProduct;
import interiormanagement.ContentProvider;
import interiormanagement.Controller.ProcessDatabase;
import static interiormanagement.View.EmployeeFrame.TABLE_NAME;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class ProductFrame extends javax.swing.JFrame {
    public final Color GREEN_LIGHT = new Color(95, 212, 197);
    private final String[] titles = {"STT","Tên Sản Phẩm","Đơn Vị Tính","Tên Loại","Giá Bán","Số Lượng"};
    
    private ProcessDatabase process; 
    private ArrayList<Product> listProduct;
    private ArrayList<TypeProduct> listTypeProduct;
    private ResultSet result;
    private DefaultTableModel model;
    private boolean addOrUpdate = false;
    /**
     * Creates new form EmployeeFrame
     */
    public ProductFrame() {
        
        initComponents();
        setSize(800,687);
        setLocationRelativeTo(null);
        setTitle("Quản lý cửa hàng nội thất DreamHouse");
        
        // set icon jframe
        ContentProvider.Logo(this);
        
        process = ContentProvider.process;
        listProduct = new ArrayList<>();
        
        model = (DefaultTableModel) productTable.getModel();
        model.setColumnIdentifiers(titles);
        
        setLabelEnable(false,false);
        
        ShowTypeProcduct();
        ShowDataTable();
        
        listProductLabel.setBackground(Color.WHITE);
        
        productTable.setDefaultEditor(Object.class, null);
        productTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (productTable.getSelectedRow() > -1) {
                    setLabelEnable(true,true);
                }
            }
        });
        
        tfSearch.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                SearchData();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                SearchData();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel11 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        maSUpdatePTextField = new javax.swing.JTextField();
        tenSPUpdateTextField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        dvtUpdateTextField = new javax.swing.JTextField();
        tenLoaiUpdateComboBox = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        acceptUpdateButton = new javax.swing.JButton();
        cancelUpdateButton = new javax.swing.JButton();
        donGiaUpdateTextField = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        soLuongUpdateTextField = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        topPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        leftPanel = new javax.swing.JPanel();
        listProductLabel = new javax.swing.JLabel();
        addProductLabel = new javax.swing.JLabel();
        updateProductLabel = new javax.swing.JLabel();
        deleteProductLabel = new javax.swing.JLabel();
        rightPanel = new javax.swing.JPanel();
        listProductPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        tfSearch = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        addProductPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        tfName = new javax.swing.JTextField();
        tfUnit = new javax.swing.JTextField();
        cBTypeName = new javax.swing.JComboBox<>();
        tfCost = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        jLabel13.setText("Mã SP");

        jLabel14.setText("Tên SP");

        jLabel15.setText("Đơn Vị Tính");

        jLabel16.setText("Tên Loại");

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        acceptUpdateButton.setText("Chấp Nhận");
        acceptUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptUpdateButtonActionPerformed(evt);
            }
        });

        cancelUpdateButton.setText("Hủy");
        cancelUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelUpdateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(acceptUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cancelUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(acceptUpdateButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
            .addComponent(cancelUpdateButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel17.setText("Đơn giá");

        jLabel18.setText("Số lượng");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel14)
                            .addComponent(jLabel13)
                            .addComponent(jLabel16)))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel17))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(soLuongUpdateTextField)
                    .addComponent(donGiaUpdateTextField)
                    .addComponent(maSUpdatePTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tenSPUpdateTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dvtUpdateTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tenLoaiUpdateComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 427, Short.MAX_VALUE))
                .addGap(68, 68, 68))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(maSUpdatePTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(tenSPUpdateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(dvtUpdateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(tenLoaiUpdateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(donGiaUpdateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(soLuongUpdateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(214, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(0, 153, 153));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SẢN PHẨM");
        jLabel1.setOpaque(true);

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 881, Short.MAX_VALUE)
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        getContentPane().add(topPanel, java.awt.BorderLayout.PAGE_START);

        leftPanel.setBackground(new java.awt.Color(95, 212, 197));
        leftPanel.setPreferredSize(new java.awt.Dimension(200, 481));

        listProductLabel.setBackground(new java.awt.Color(95, 212, 197));
        listProductLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        listProductLabel.setForeground(new java.awt.Color(47, 55, 67));
        listProductLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        listProductLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interiormanagement/Images/list_icon.png"))); // NOI18N
        listProductLabel.setText("DANH SÁCH");
        listProductLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        listProductLabel.setOpaque(true);
        listProductLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listProductLabelMousePressed(evt);
            }
        });

        addProductLabel.setBackground(new java.awt.Color(95, 212, 197));
        addProductLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        addProductLabel.setForeground(new java.awt.Color(47, 55, 67));
        addProductLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        addProductLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interiormanagement/Images/add_icon.png"))); // NOI18N
        addProductLabel.setText("Thêm");
        addProductLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addProductLabel.setOpaque(true);
        addProductLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                addProductLabelMousePressed(evt);
            }
        });

        updateProductLabel.setBackground(new java.awt.Color(95, 212, 197));
        updateProductLabel.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        updateProductLabel.setForeground(new java.awt.Color(47, 55, 67));
        updateProductLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        updateProductLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interiormanagement/Images/edit_icon.png"))); // NOI18N
        updateProductLabel.setText("Cập nhật ");
        updateProductLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateProductLabel.setOpaque(true);
        updateProductLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                updateProductLabelMousePressed(evt);
            }
        });

        deleteProductLabel.setBackground(new java.awt.Color(95, 212, 197));
        deleteProductLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        deleteProductLabel.setForeground(new java.awt.Color(47, 55, 67));
        deleteProductLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        deleteProductLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interiormanagement/Images/cancel_icon.png"))); // NOI18N
        deleteProductLabel.setText("Xóa");
        deleteProductLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteProductLabel.setOpaque(true);
        deleteProductLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                deleteProductLabelMousePressed(evt);
            }
        });

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(listProductLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
            .addComponent(addProductLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(deleteProductLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(updateProductLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(listProductLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addProductLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateProductLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteProductLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(110, Short.MAX_VALUE))
        );

        getContentPane().add(leftPanel, java.awt.BorderLayout.LINE_START);

        rightPanel.setLayout(new java.awt.CardLayout());

        listProductPanel.setBackground(new java.awt.Color(255, 255, 255));
        listProductPanel.setLayout(new java.awt.BorderLayout());

        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(productTable);

        listProductPanel.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setPreferredSize(new java.awt.Dimension(666, 50));

        tfSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfSearchKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Tìm Kiếm");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(309, 309, 309))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)))
        );

        listProductPanel.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        rightPanel.add(listProductPanel, "card2");

        addProductPanel.setBackground(new java.awt.Color(255, 255, 255));
        addProductPanel.setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setPreferredSize(new java.awt.Dimension(200, 392));
        jPanel8.setLayout(new java.awt.GridLayout(8, 0, 0, 10));

        jLabel20.setText("Tên SP");
        jPanel8.add(jLabel20);

        jLabel21.setText("Đơn Vị Tính");
        jPanel8.add(jLabel21);

        jLabel22.setText("Tên Loại");
        jPanel8.add(jLabel22);

        jLabel2.setText("Giá Bán");
        jPanel8.add(jLabel2);
        jPanel8.add(jLabel3);
        jPanel8.add(jLabel5);
        jPanel8.add(jLabel4);

        addButton.setText("Chấp Nhận");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        jPanel8.add(addButton);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.add(jPanel3);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        jPanel13.setPreferredSize(new java.awt.Dimension(200, 392));
        jPanel13.setLayout(new java.awt.GridLayout(8, 0, 0, 10));

        tfName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNameKeyTyped(evt);
            }
        });
        jPanel13.add(tfName);
        jPanel13.add(tfUnit);

        jPanel13.add(cBTypeName);

        tfCost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfCostKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfCostKeyTyped(evt);
            }
        });
        jPanel13.add(tfCost);
        jPanel13.add(jLabel6);
        jPanel13.add(jLabel8);
        jPanel13.add(jLabel9);

        cancelButton.setText("Hủy");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        jPanel13.add(cancelButton);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.add(jPanel5);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 657, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        addProductPanel.add(jPanel1, java.awt.BorderLayout.CENTER);

        rightPanel.add(addProductPanel, "card3");

        getContentPane().add(rightPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void acceptUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptUpdateButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_acceptUpdateButtonActionPerformed

    private void cancelUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelUpdateButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelUpdateButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        if (!validateInfo()) {
            if (!addOrUpdate) {
                AddProduct();
            }else{
                EditProduct();
            }
        }else
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập đủ thông tin !");
    }//GEN-LAST:event_addButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        setSelectedLabel(true, false, false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void listProductLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listProductLabelMousePressed
        setSelectedLabel(true, false, false);
    }//GEN-LAST:event_listProductLabelMousePressed

    private void addProductLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addProductLabelMousePressed
            setSelectedLabel(false, true, false);
            addOrUpdate = false;
            resetInfo();
    }//GEN-LAST:event_addProductLabelMousePressed

    private void updateProductLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateProductLabelMousePressed
        if (updateProductLabel.isEnabled()) {
            setSelectedLabel(false, false, true);
            addOrUpdate = true;
            
            int index = productTable.getSelectedRow();
            Product product  = listProduct.get(index);
            
            String nameType = "";
            for(TypeProduct type : listTypeProduct){
                if (type.getMaLoai() == product.getLoaisp()) {
                    nameType = type.getTenLoai();
                }
            }
            
            tfName.setText(product.getTensp());
            tfUnit.setText(product.getDvt());
            tfCost.setText(product.getGiaBan()+"");
            cBTypeName.setSelectedItem(nameType);
        }
    }//GEN-LAST:event_updateProductLabelMousePressed

    private void deleteProductLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteProductLabelMousePressed
         if (deleteProductLabel.isEnabled()) {
            int result = JOptionPane.showConfirmDialog(rootPane, "Bạn có chắc chắn muốn xóa không?","Thông báo",JOptionPane.YES_NO_OPTION);
            if (result == 0) {
                int idProduct = listProduct.get(productTable.getSelectedRow()).getMasp();
                if (!(CheckFromDetailBill(idProduct) && CheckFromDetailBillCustomer(idProduct))) {
                   if(DeleteEmployee(idProduct)){
                       JOptionPane.showMessageDialog(rootPane, "Xóa thành công!");
                       ShowDataTable();
                   }else
                       JOptionPane.showMessageDialog(rootPane, "Xóa thát bại!");
                }else
                   JOptionPane.showMessageDialog(rootPane, "Sản phẩm còn liên quan đến những thông tin khác!");
            }
         }
    }//GEN-LAST:event_deleteProductLabelMousePressed

    private void tfCostKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCostKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE) || c== KeyEvent.VK_DELETE || tfCost.getText().length() > 8)
            evt.consume();
    }//GEN-LAST:event_tfCostKeyTyped

    private void tfSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSearchKeyTyped
       char c = evt.getKeyChar();
        if(tfSearch.getText().length() > 90)
            evt.consume();
    }//GEN-LAST:event_tfSearchKeyTyped

    private void tfNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNameKeyTyped
        char c = evt.getKeyChar();
        if(tfName.getText().length() > 98)
            evt.consume();
    }//GEN-LAST:event_tfNameKeyTyped

    private void tfCostKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCostKeyPressed
        if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_V) {
            evt.consume();
        }
    }//GEN-LAST:event_tfCostKeyPressed
    
    private boolean CheckFromDetailBill(int idProduct){
        if (process.Connect()) {
            return process.CheckFromDetailBill(idProduct);
        }
        return false;
    }
    
    private boolean CheckFromDetailBillCustomer(int idProduct){
        if (process.Connect()) {
            return process.CheckFromDetailBillCustomer(idProduct);
        }
        return false;
    }
     
    private void SearchData(){
        ArrayList<Product> searchList = new ArrayList<>();
        for(Product product : listProduct){
            if (product.getTensp().toLowerCase().contains(tfSearch.getText())) {
                searchList.add(product);
            }
        }
        
        if(tfSearch.getText().equals("")){
            searchList = listProduct;
        }
        
         model.setRowCount(0);
         AddRow(searchList);
    }
    
    private void AddProduct(){
     if (!CheckProduct()) {
                 int maLoai = 0;
                for(TypeProduct type : listTypeProduct){
                    if (type.getTenLoai().equals(cBTypeName.getSelectedItem())){
                        maLoai = type.getMaLoai();
                    }
                }
                if (InsertProduct(tfName.getText(), tfUnit.getText(),Integer.parseInt(tfCost.getText()),maLoai)) {
                    JOptionPane.showMessageDialog(rootPane, "Thêm Thành Công");
                    ShowDataTable();
                    setSelectedLabel(true, false, false);
                    process.CloseConnect();
                }else
                    JOptionPane.showMessageDialog(rootPane, "Thông tin bạn nhập quá dài!");
            }else
                JOptionPane.showMessageDialog(rootPane, "Sản phẩm đã tồn tại !");
    }
    
    private void EditProduct(){
        int maSP = listProduct.get(productTable.getSelectedRow()).getMasp();
         int maLoai = 0;
                for(TypeProduct type : listTypeProduct){
                    if (type.getTenLoai().equals(cBTypeName.getSelectedItem())){
                        maLoai = type.getMaLoai();
                    }
                }
         Product product = new Product(maSP,
                 tfName.getText(),
                 tfUnit.getText(),
                 Integer.parseInt(tfCost.getText()),
                 0,
                 maLoai);
         
        if (ContentProvider.UpdateProduct(product)) {
            JOptionPane.showMessageDialog(rootPane,"Sửa thành công !");
            setPanelVisible(true, false);
            setSelectedLabel(true,false,false);
            setLabelEnable(false, false);
            ShowDataTable();
            process.CloseConnect();
        }else
            JOptionPane.showMessageDialog(rootPane,"Thông tin bạn sửa quá dài!!");
    }
    
    private boolean InsertProduct(String nameType,String unit,int cost,int idType){
         if (process.Connect()) {
             return process.InsertProduct(nameType,unit,cost,idType);
        }
        return false;
    }
    
    private boolean DeleteEmployee(int idProduct){
        if (process.Connect()) {
             return process.DeleteData(Product.TABLE_NAME,"MASP",idProduct + "");
        }
        return false;
    } 
    
    private boolean CheckProduct(){
        for(Product product : listProduct){
            if (tfName.getText().toLowerCase().equals(product.getTensp().toLowerCase())) {
                return true;
            }
        }
        return false;
    }
    
    private void ShowTypeProcduct(){
        listTypeProduct = new ArrayList<>();
        
        ResultSet rs = ContentProvider.getList(TypeProduct.TABLE_NAME);
        
        try {
            while(rs.next()){
                listTypeProduct.add(new TypeProduct(rs.getInt("MALOAI"), rs.getString("TENLOAI")));
            }
        } catch (SQLException ex) {
            Logger.getLogger(ProductFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        for(TypeProduct type : listTypeProduct){
            cBTypeName.addItem(type.getTenLoai());
        }
        
        process.CloseConnect();
    }
    
    private void ShowDataTable(){
        model.setRowCount(0);
        listProduct.clear();
    
        result = ContentProvider.getList(Product.TABLE_NAME);
       
        try {
            while(result.next()){
                listProduct.add(new Product(
                        result.getInt("MASP"),
                        result.getString("TENSP"),
                        result.getString("DVTINH"),
                        result.getInt("GIABAN"),
                        result.getInt("SOLUONG"),
                        result.getInt("MALOAI")
                ));
            }
        } catch (SQLException ex) {
            Logger.getLogger(EmployeeFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
       AddRow(listProduct);
       process.CloseConnect();
    }
    
    private void AddRow(ArrayList<Product> list){
        
        int stt = 1;
        for(Product product : list){
            String tenLoai = "";
            for(TypeProduct type : listTypeProduct){
                if (type.getMaLoai() == product.getLoaisp()) {
                    tenLoai = type.getTenLoai();
                }
            }
            
            model.addRow(new Object[]{
                stt,
                product.getTensp(),
                product.getDvt(),
                tenLoai,
                ContentProvider.numberFormat.format(product.getGiaBan()),
                product.getAmount()
            });
            stt++;
        }
    }
    
    private boolean validateInfo(){
        if (tfName.getText().equals("") || tfCost.getText().equals("") ||
                tfUnit.getText().equals("")
               ) {
            return true;
        }
        return false;
    }
    
    private void resetInfo(){
        tfName.setText("");
        tfUnit.setText("");
        tfCost.setText("");
    }
    
    private void setLabelEnable(boolean update,boolean delete){
        updateProductLabel.setEnabled(update);
        deleteProductLabel.setEnabled(delete);
    }
    
    private void setPanelVisible(boolean listPanel,boolean addPanel){
        listProductPanel.setVisible(listPanel);
        addProductPanel.setVisible(addPanel);
    }
    
    private void setSelectedLabel(boolean selectedListLabel,boolean selectedAddLabel,boolean selectedUpdateLabel){
        if (selectedListLabel) {
            listProductLabel.setBackground(Color.WHITE);
            addProductLabel.setBackground(GREEN_LIGHT);
            updateProductLabel.setBackground(GREEN_LIGHT);
            setPanelVisible(true, false);
             if (productTable.getSelectedRow() > -1) {
                setLabelEnable(true,true);
            }else
                setLabelEnable(false,false);
        }
        if (selectedAddLabel) {
            listProductLabel.setBackground(GREEN_LIGHT);
            addProductLabel.setBackground(Color.WHITE);
            updateProductLabel.setBackground(GREEN_LIGHT);
            setPanelVisible(false, true);
            setLabelEnable(false,false);
        }
        if (selectedUpdateLabel) {
            listProductLabel.setBackground(GREEN_LIGHT);
            addProductLabel.setBackground(GREEN_LIGHT);
            updateProductLabel.setBackground(Color.WHITE);
            setPanelVisible(false, true);
            setLabelEnable(true,false);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptUpdateButton;
    private javax.swing.JButton addButton;
    private javax.swing.JLabel addProductLabel;
    private javax.swing.JPanel addProductPanel;
    private javax.swing.JComboBox<String> cBTypeName;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton cancelUpdateButton;
    private javax.swing.JLabel deleteProductLabel;
    private javax.swing.JTextField donGiaUpdateTextField;
    private javax.swing.JTextField dvtUpdateTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JLabel listProductLabel;
    private javax.swing.JPanel listProductPanel;
    private javax.swing.JTextField maSUpdatePTextField;
    private javax.swing.JTable productTable;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JTextField soLuongUpdateTextField;
    private javax.swing.JComboBox<String> tenLoaiUpdateComboBox;
    private javax.swing.JTextField tenSPUpdateTextField;
    private javax.swing.JTextField tfCost;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfSearch;
    private javax.swing.JTextField tfUnit;
    private javax.swing.JPanel topPanel;
    private javax.swing.JLabel updateProductLabel;
    // End of variables declaration//GEN-END:variables
}
